plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.6'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.palantir.docker' version '0.35.0'
}

docker {
    name "myReviewService:latest"
    files tasks.named('bootJar').get().archiveFile
    buildArgs(['JAR_FILE': tasks.named('bootJar').get().archiveFileName.get()])
}

tasks.named('docker') {
    dependsOn tasks.named('bootJar')
}

group = 'com.myReviewService'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Jackson Core
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
    // Jackson Databind (ObjectMapper를 사용하려면 필수)
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'org.redisson:redisson-spring-boot-starter:3.22.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    archiveFileName = 'my-review-service.jar' // JAR 파일 이름 설정
}